{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/src/App/pages/Bezier.js\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  stroke: \", \";\\n  stroke-dasharray: 5, 5;\\n  stroke-width: 2;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  fill: transparent;\\n  stroke: transparent;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  fill: white;\\n  stroke: \", \";\\n  stroke-width: 3;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  fill: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  cursor: \", \";\\n  &:active {\\n    cursor: \", \";\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  overflow: visible;\\n  touch-action: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { COLORS } from '../../constants';\nimport { getDeviceType } from '../../helpers/responsive.helpers.js';\n\nvar Bezier =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Bezier, _PureComponent);\n\n  function Bezier() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Bezier);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Bezier)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      draggingPointId: null\n    };\n\n    _this.handleSelectPoint = function (pointId) {\n      return function () {\n        if (_this.props.grabbable) {\n          // TODO: Get distance from point center, so that clicking and dragging a\n          // new point doesn't center it on the cursor.\n          _this.setState({\n            draggingPointId: pointId\n          });\n        }\n      };\n    };\n\n    _this.handleRelease = function () {\n      _this.setState({\n        draggingPointId: null\n      });\n    };\n\n    _this.handleDrag = function (ev) {\n      // This event handles both mouseMove and touchMove.\n      var x, y;\n\n      if (ev.touches) {\n        ev.preventDefault();\n        var touch = ev.touches[0];\n        var _ref = [touch.clientX, touch.clientY];\n        x = _ref[0];\n        y = _ref[1];\n      } else {\n        var _ref2 = [ev.clientX, ev.clientY];\n        x = _ref2[0];\n        y = _ref2[1];\n      }\n\n      var _this$props = _this.props,\n          viewBoxWidth = _this$props.viewBoxWidth,\n          viewBoxHeight = _this$props.viewBoxHeight,\n          updatePoint = _this$props.updatePoint,\n          grabbable = _this$props.grabbable;\n      var draggingPointId = _this.state.draggingPointId;\n\n      if (!draggingPointId || !grabbable || !updatePoint) {\n        return;\n      }\n\n      var svgBB = _this.node.getBoundingClientRect();\n\n      var positionRelativeToSvg = [x - svgBB.left, y - svgBB.top];\n      var positionWithinViewBox = [positionRelativeToSvg[0] * viewBoxWidth / svgBB.width, positionRelativeToSvg[1] * viewBoxHeight / svgBB.height];\n      updatePoint(draggingPointId, positionWithinViewBox);\n    };\n\n    return _this;\n  }\n\n  _createClass(Bezier, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          points = _this$props2.points,\n          viewBoxWidth = _this$props2.viewBoxWidth,\n          viewBoxHeight = _this$props2.viewBoxHeight,\n          strokeColor = _this$props2.strokeColor,\n          strokeWidth = _this$props2.strokeWidth,\n          grabbable = _this$props2.grabbable;\n\n      var _points = _slicedToArray(points, 4),\n          p1 = _points[0],\n          p2 = _points[1],\n          p3 = _points[2],\n          p4 = _points[3];\n\n      var curveType = typeof p4 !== 'undefined' ? 'cubic' : 'quadratic';\n      var instructions = curveType === 'cubic' ? \"\\n            M \".concat(p1[0], \",\").concat(p1[1], \"\\n            C \").concat(p2[0], \",\").concat(p2[1], \" \").concat(p3[0], \",\").concat(p3[1], \" \").concat(p4[0], \",\").concat(p4[1], \"\\n          \") : \"\\n            M \".concat(p1[0], \",\").concat(p1[1], \"\\n            Q \").concat(p2[0], \",\").concat(p2[1], \" \").concat(p3[0], \",\").concat(p3[1], \"\\n          \");\n      var lastPoint = curveType === 'cubic' ? p4 : p3;\n      var lastPointId = curveType === 'cubic' ? 'p4' : 'p3';\n      var isMobile = getDeviceType() === 'mobile';\n      return React.createElement(Svg, {\n        viewBox: \"0 0 \".concat(viewBoxWidth, \" \").concat(viewBoxHeight),\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        onMouseMove: this.handleDrag,\n        onTouchMove: this.handleDrag,\n        onMouseUp: this.handleRelease,\n        onTouchEnd: this.handleRelease,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(ControlLine, {\n        x1: p1[0],\n        y1: p1[1],\n        x2: p2[0],\n        y2: p2[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), curveType === 'quadratic' && React.createElement(ControlLine, {\n        x1: p2[0],\n        y1: p2[1],\n        x2: p3[0],\n        y2: p3[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), curveType === 'cubic' && React.createElement(ControlLine, {\n        x1: p3[0],\n        y1: p3[1],\n        x2: p4[0],\n        y2: p4[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        d: instructions,\n        fill: \"none\",\n        stroke: strokeColor,\n        strokeWidth: strokeWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(EndPoint, {\n        cx: p1[0],\n        cy: p1[1],\n        onMouseDown: this.handleSelectPoint('p1'),\n        onTouchStart: this.handleSelectPoint('p1'),\n        grabbable: grabbable,\n        isMobile: isMobile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(ControlPoint, {\n        cx: p2[0],\n        cy: p2[1],\n        onMouseDown: this.handleSelectPoint('p2'),\n        onTouchStart: this.handleSelectPoint('p2'),\n        grabbable: grabbable,\n        isMobile: isMobile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), curveType === 'cubic' && React.createElement(ControlPoint, {\n        cx: p3[0],\n        cy: p3[1],\n        onMouseDown: this.handleSelectPoint('p3'),\n        onTouchStart: this.handleSelectPoint('p3'),\n        grabbable: grabbable,\n        isMobile: isMobile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(EndPoint, {\n        cx: lastPoint[0],\n        cy: lastPoint[1],\n        onMouseDown: this.handleSelectPoint(lastPointId),\n        onTouchStart: this.handleSelectPoint(lastPointId),\n        grabbable: grabbable,\n        isMobile: isMobile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Bezier;\n}(PureComponent);\n\nBezier.propTypes = {\n  points: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n  viewBoxWidth: PropTypes.number,\n  viewBoxHeight: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  updatePoint: PropTypes.func\n};\nBezier.defaultProps = {\n  viewBoxWidth: 200,\n  viewBoxHeight: 250,\n  strokeColor: COLORS.violet[500],\n  strokeWidth: 6,\n  grabbable: true\n};\n\nvar ControlPoint = function ControlPoint(_ref3) {\n  var cx = _ref3.cx,\n      cy = _ref3.cy,\n      onMouseDown = _ref3.onMouseDown,\n      onTouchStart = _ref3.onTouchStart,\n      grabbable = _ref3.grabbable,\n      isMobile = _ref3.isMobile;\n  return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(VisibleControlPoint, {\n    cx: cx,\n    cy: cy,\n    grabbable: grabbable,\n    isMobile: isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(InvisibleHandle, {\n    cx: cx,\n    cy: cy,\n    grabbable: grabbable,\n    onMouseDown: onMouseDown,\n    onTouchStart: onTouchStart,\n    isMobile: isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }));\n};\n\nvar Svg = styled.svg(_templateObject());\nvar Point = styled.ellipse(_templateObject2(), function (props) {\n  return props.grabbable ? '-webkit-grab' : 'not-allowed';\n}, function (props) {\n  return props.grabbable ? '-webkit-grabbing' : 'not-allowed';\n});\nvar EndPoint = styled(Point).attrs(function (props) {\n  return {\n    rx: props.isMobile ? 40 : 15,\n    ry: props.isMobile ? 40 : 15\n  };\n})(_templateObject3(), function (props) {\n  return props.grabbable ? COLORS.pink[500] : COLORS.violet[500];\n});\nvar VisibleControlPoint = styled(Point).attrs(function (props) {\n  return {\n    rx: props.isMobile ? 20 : 8,\n    ry: props.isMobile ? 20 : 8\n  };\n})(_templateObject4(), function (props) {\n  return props.grabbable ? COLORS.pink[500] : COLORS.violet[500];\n});\nvar InvisibleHandle = styled(Point).attrs(function (props) {\n  return {\n    rx: props.isMobile ? 40 : 25,\n    ry: props.isMobile ? 40 : 25\n  };\n})(_templateObject5());\nvar ControlLine = styled.line(_templateObject6(), COLORS.gray[300]);\nexport default Bezier;","map":{"version":3,"sources":["/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/src/App/pages/Bezier.js"],"names":["React","PureComponent","PropTypes","styled","COLORS","getDeviceType","Bezier","state","draggingPointId","handleSelectPoint","pointId","props","grabbable","setState","handleRelease","handleDrag","ev","x","y","touches","preventDefault","touch","clientX","clientY","viewBoxWidth","viewBoxHeight","updatePoint","svgBB","node","getBoundingClientRect","positionRelativeToSvg","left","top","positionWithinViewBox","width","height","points","strokeColor","strokeWidth","p1","p2","p3","p4","curveType","instructions","lastPoint","lastPointId","isMobile","propTypes","arrayOf","number","string","func","defaultProps","violet","ControlPoint","cx","cy","onMouseDown","onTouchStart","Svg","svg","Point","ellipse","EndPoint","attrs","rx","ry","pink","VisibleControlPoint","InvisibleHandle","ControlLine","line","gray"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { COLORS } from '../../constants';\nimport { getDeviceType } from '../../helpers/responsive.helpers.js';\n\nclass Bezier extends PureComponent {\n  state = {\n    draggingPointId: null,\n  };\n\n  static propTypes = {\n    points: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    viewBoxWidth: PropTypes.number,\n    viewBoxHeight: PropTypes.number,\n    strokeColor: PropTypes.string,\n    strokeWidth: PropTypes.number,\n    updatePoint: PropTypes.func,\n  };\n\n  static defaultProps = {\n    viewBoxWidth: 200,\n    viewBoxHeight: 250,\n    strokeColor: COLORS.violet[500],\n    strokeWidth: 6,\n    grabbable: true,\n  };\n\n  handleSelectPoint = pointId => () => {\n    if (this.props.grabbable) {\n      // TODO: Get distance from point center, so that clicking and dragging a\n      // new point doesn't center it on the cursor.\n      this.setState({ draggingPointId: pointId });\n    }\n  };\n\n  handleRelease = () => {\n    this.setState({ draggingPointId: null });\n  };\n\n  handleDrag = ev => {\n    // This event handles both mouseMove and touchMove.\n    let x, y;\n    if (ev.touches) {\n      ev.preventDefault();\n      const touch = ev.touches[0];\n      [x, y] = [touch.clientX, touch.clientY];\n    } else {\n      [x, y] = [ev.clientX, ev.clientY];\n    }\n\n    const { viewBoxWidth, viewBoxHeight, updatePoint, grabbable } = this.props;\n    const { draggingPointId } = this.state;\n\n    if (!draggingPointId || !grabbable || !updatePoint) {\n      return;\n    }\n\n    const svgBB = this.node.getBoundingClientRect();\n    const positionRelativeToSvg = [x - svgBB.left, y - svgBB.top];\n\n    const positionWithinViewBox = [\n      (positionRelativeToSvg[0] * viewBoxWidth) / svgBB.width,\n      (positionRelativeToSvg[1] * viewBoxHeight) / svgBB.height,\n    ];\n\n    updatePoint(draggingPointId, positionWithinViewBox);\n  };\n  render() {\n    const {\n      points,\n      viewBoxWidth,\n      viewBoxHeight,\n      strokeColor,\n      strokeWidth,\n      grabbable,\n    } = this.props;\n    const [p1, p2, p3, p4] = points;\n\n    const curveType = typeof p4 !== 'undefined' ? 'cubic' : 'quadratic';\n\n    const instructions =\n      curveType === 'cubic'\n        ? `\n            M ${p1[0]},${p1[1]}\n            C ${p2[0]},${p2[1]} ${p3[0]},${p3[1]} ${p4[0]},${p4[1]}\n          `\n        : `\n            M ${p1[0]},${p1[1]}\n            Q ${p2[0]},${p2[1]} ${p3[0]},${p3[1]}\n          `;\n\n    const lastPoint = curveType === 'cubic' ? p4 : p3;\n    const lastPointId = curveType === 'cubic' ? 'p4' : 'p3';\n\n    const isMobile = getDeviceType() === 'mobile';\n\n    return (\n      <Svg\n        viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n        ref={node => (this.node = node)}\n        onMouseMove={this.handleDrag}\n        onTouchMove={this.handleDrag}\n        onMouseUp={this.handleRelease}\n        onTouchEnd={this.handleRelease}\n      >\n        <ControlLine x1={p1[0]} y1={p1[1]} x2={p2[0]} y2={p2[1]} />\n        {curveType === 'quadratic' && (\n          <ControlLine x1={p2[0]} y1={p2[1]} x2={p3[0]} y2={p3[1]} />\n        )}\n        {curveType === 'cubic' && (\n          <ControlLine x1={p3[0]} y1={p3[1]} x2={p4[0]} y2={p4[1]} />\n        )}\n\n        <path\n          d={instructions}\n          fill=\"none\"\n          stroke={strokeColor}\n          strokeWidth={strokeWidth}\n        />\n\n        <EndPoint\n          cx={p1[0]}\n          cy={p1[1]}\n          onMouseDown={this.handleSelectPoint('p1')}\n          onTouchStart={this.handleSelectPoint('p1')}\n          grabbable={grabbable}\n          isMobile={isMobile}\n        />\n\n        <ControlPoint\n          cx={p2[0]}\n          cy={p2[1]}\n          onMouseDown={this.handleSelectPoint('p2')}\n          onTouchStart={this.handleSelectPoint('p2')}\n          grabbable={grabbable}\n          isMobile={isMobile}\n        />\n\n        {curveType === 'cubic' && (\n          <ControlPoint\n            cx={p3[0]}\n            cy={p3[1]}\n            onMouseDown={this.handleSelectPoint('p3')}\n            onTouchStart={this.handleSelectPoint('p3')}\n            grabbable={grabbable}\n            isMobile={isMobile}\n          />\n        )}\n\n        <EndPoint\n          cx={lastPoint[0]}\n          cy={lastPoint[1]}\n          onMouseDown={this.handleSelectPoint(lastPointId)}\n          onTouchStart={this.handleSelectPoint(lastPointId)}\n          grabbable={grabbable}\n          isMobile={isMobile}\n        />\n      </Svg>\n    );\n  }\n}\n\nconst ControlPoint = ({\n  cx,\n  cy,\n  onMouseDown,\n  onTouchStart,\n  grabbable,\n  isMobile,\n}) => (\n  <g>\n    <VisibleControlPoint\n      cx={cx}\n      cy={cy}\n      grabbable={grabbable}\n      isMobile={isMobile}\n    />\n    <InvisibleHandle\n      cx={cx}\n      cy={cy}\n      grabbable={grabbable}\n      onMouseDown={onMouseDown}\n      onTouchStart={onTouchStart}\n      isMobile={isMobile}\n    />\n  </g>\n);\n\nconst Svg = styled.svg`\n  position: relative;\n  overflow: visible;\n  touch-action: none;\n`;\n\nconst Point = styled.ellipse`\n  cursor: ${props => (props.grabbable ? '-webkit-grab' : 'not-allowed')};\n  &:active {\n    cursor: ${props => (props.grabbable ? '-webkit-grabbing' : 'not-allowed')};\n  }\n`;\n\nconst EndPoint = styled(Point).attrs(props => ({\n  rx: props.isMobile ? 40 : 15,\n  ry: props.isMobile ? 40 : 15,\n}))`\n  fill: ${props => (props.grabbable ? COLORS.pink[500] : COLORS.violet[500])};\n`;\n\nconst VisibleControlPoint = styled(Point).attrs(props => ({\n  rx: props.isMobile ? 20 : 8,\n  ry: props.isMobile ? 20 : 8,\n}))`\n  fill: white;\n  stroke: ${props => (props.grabbable ? COLORS.pink[500] : COLORS.violet[500])};\n  stroke-width: 3;\n`;\n\nconst InvisibleHandle = styled(Point).attrs(props => ({\n  rx: props.isMobile ? 40 : 25,\n  ry: props.isMobile ? 40 : 25,\n}))`\n  fill: transparent;\n  stroke: transparent;\n`;\n\nconst ControlLine = styled.line`\n  stroke: ${COLORS.gray[300]};\n  stroke-dasharray: 5, 5;\n  stroke-width: 2;\n`;\n\nexport default Bezier;"]},"metadata":{},"sourceType":"module"}