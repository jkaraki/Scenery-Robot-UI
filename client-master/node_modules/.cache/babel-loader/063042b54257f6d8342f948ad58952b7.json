{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _layouts = require('./layouts');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Gamepad = function (_React$Component) {\n  _inherits(Gamepad, _React$Component);\n\n  function Gamepad(props, context) {\n    _classCallCheck(this, Gamepad);\n\n    var _this = _possibleConstructorReturn(this, (Gamepad.__proto__ || Object.getPrototypeOf(Gamepad)).call(this, props, context));\n\n    _this.padState = {\n      connected: false,\n      buttons: {\n        A: false,\n        B: false,\n        X: false,\n        Y: false,\n        LB: false,\n        LT: false,\n        LS: false,\n        RB: false,\n        RT: false,\n        RS: false,\n        Start: false,\n        Back: false,\n        DPadUp: false,\n        DPadRight: false,\n        DPadDown: false,\n        DPadLeft: false\n      },\n      axis: {\n        LeftStickX: 0.0,\n        LeftStickY: 0.0,\n        RightStickX: 0.0,\n        RightStickY: 0.0,\n        RightTrigger: 0.0,\n        LeftTrigger: 0.0\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Gamepad, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.mounted = true;\n      if (window && window.requestAnimationFrame) window.requestAnimationFrame(this.updateGamepad.bind(this));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: 'updateGamepad',\n    value: function updateGamepad() {\n      if (!this.mounted) return;\n      var gamepadIndex = this.props.gamepadIndex;\n      var gamepads = navigator.getGamepads();\n\n      if (gamepads.length && gamepads.length > gamepadIndex && gamepads[gamepadIndex]) {\n        var gamepad = gamepads[gamepadIndex];\n\n        if (!this.padState.connected) {\n          this.padState.connected = true;\n          this.props.onConnect(gamepadIndex);\n        }\n\n        this.updateAllButtons(gamepad);\n        this.updateAllAxis(gamepad);\n      } else if (this.padState.connected) {\n        this.padState.connected = false;\n        this.props.onDisconnect(gamepadIndex);\n      }\n\n      if (window && window.requestAnimationFrame) window.requestAnimationFrame(this.updateGamepad.bind(this));\n    }\n  }, {\n    key: 'updateAllButtons',\n    value: function updateAllButtons(gamepad) {\n      for (var i = 0; i < gamepad.buttons.length; ++i) {\n        var pressed = gamepad.buttons[i].pressed;\n        var value = gamepad.buttons[i].value;\n        var buttonName = this.buttonIndexToButtonName(i);\n        this.updateButton(buttonName, pressed);\n        var axisName = this.buttonIndexToAxisName(i);\n        this.updateAxis(axisName, value);\n      }\n    }\n  }, {\n    key: 'updateButton',\n    value: function updateButton(buttonName, pressed) {\n      if (this.padState.buttons[buttonName] === undefined) {\n        console.error('Unknown button ' + buttonName);\n      } else if (this.padState.buttons[buttonName] !== pressed) {\n        this.padState.buttons[buttonName] = pressed;\n        this.props.onButtonChange(buttonName, pressed);\n        this.props['onButton' + (pressed ? 'Down' : 'Up')](buttonName);\n        if (pressed) this.props['on' + buttonName.replace('DPad', '')]();\n      }\n    }\n  }, {\n    key: 'updateAllAxis',\n    value: function updateAllAxis(gamepad) {\n      for (var i = 0; i < gamepad.axes.length; ++i) {\n        var axisName = this.axisIndexToAxisName(i);\n        var value = gamepad.axes[i];\n        this.updateAxis(axisName, gamepad.axes[i]);\n      }\n    }\n  }, {\n    key: 'updateAxis',\n    value: function updateAxis(axisName, originalValue) {\n      if (axisName && originalValue !== undefined && originalValue !== null && originalValue !== NaN) {\n        var invert = axisName[0] === '-';\n        var value = originalValue * (invert ? -1 : 1);\n\n        if (Math.abs(value) < this.props.deadZone) {\n          value = 0;\n        }\n\n        if (invert) axisName = axisName.substr(1);\n\n        if (this.padState.axis[axisName] !== value) {\n          var previousValue = this.padState.axis[axisName];\n          this.padState.axis[axisName] = value;\n          this.props.onAxisChange(axisName, value, previousValue);\n\n          if (axisName === 'LeftStickX') {\n            if (previousValue <= this.props.stickThreshold && value > this.props.stickThreshold) {\n              this.props.onRight();\n            }\n\n            if (previousValue >= -this.props.stickThreshold && value < -this.props.stickThreshold) {\n              this.props.onLeft();\n            }\n          }\n\n          if (axisName === 'LeftStickY') {\n            if (previousValue <= this.props.stickThreshold && value > this.props.stickThreshold) {\n              this.props.onUp();\n            }\n\n            if (previousValue >= -this.props.stickThreshold && value < -this.props.stickThreshold) {\n              this.props.onDown();\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'buttonIndexToButtonName',\n    value: function buttonIndexToButtonName(index) {\n      var layout = this.props.layout;\n\n      if (layout.buttons && layout.buttons.length >= index + 1) {\n        return layout.buttons[index];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'buttonIndexToAxisName',\n    value: function buttonIndexToAxisName(index) {\n      var layout = this.props.layout;\n\n      if (layout.buttonAxis && layout.buttonAxis.length >= index + 1) {\n        return layout.buttonAxis[index];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'axisIndexToAxisName',\n    value: function axisIndexToAxisName(index) {\n      var layout = this.props.layout;\n\n      if (layout.axis && layout.axis.length >= index + 1) {\n        return layout.axis[index];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.Children.only(this.props.children);\n    }\n  }]);\n\n  return Gamepad;\n}(_react2.default.Component);\n\nGamepad.defaultProps = {\n  layout: _layouts.XBOX,\n  stickThreshold: 0.5,\n  deadZone: 0.08,\n  gamepadIndex: 0,\n  onConnect: function onConnect() {},\n  onDisconnect: function onDisconnect() {},\n  onButtonDown: function onButtonDown() {},\n  onButtonUp: function onButtonUp() {},\n  onButtonChange: function onButtonChange() {},\n  onAxisChange: function onAxisChange() {},\n  onA: function onA() {},\n  onB: function onB() {},\n  onX: function onX() {},\n  onY: function onY() {},\n  onStart: function onStart() {},\n  onBack: function onBack() {},\n  onLT: function onLT() {},\n  onRT: function onRT() {},\n  onLB: function onLB() {},\n  onRB: function onRB() {},\n  onLS: function onLS() {},\n  onRS: function onRS() {},\n  onUp: function onUp() {},\n  onDown: function onDown() {},\n  onLeft: function onLeft() {},\n  onRight: function onRight() {}\n};\nexports.default = Gamepad;","map":{"version":3,"sources":["/Users/josephkaraki/GitHub/Scenery-Robot-V3/client-master/node_modules/react-gamepad/lib/Gamepad.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_layouts","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Gamepad","_React$Component","context","_this","getPrototypeOf","padState","connected","buttons","A","B","X","Y","LB","LT","LS","RB","RT","RS","Start","Back","DPadUp","DPadRight","DPadDown","DPadLeft","axis","LeftStickX","LeftStickY","RightStickX","RightStickY","RightTrigger","LeftTrigger","componentDidMount","mounted","window","requestAnimationFrame","updateGamepad","bind","componentWillUnmount","gamepadIndex","gamepads","navigator","getGamepads","gamepad","onConnect","updateAllButtons","updateAllAxis","onDisconnect","pressed","buttonName","buttonIndexToButtonName","updateButton","axisName","buttonIndexToAxisName","updateAxis","undefined","console","error","onButtonChange","replace","axes","axisIndexToAxisName","originalValue","NaN","invert","Math","abs","deadZone","substr","previousValue","onAxisChange","stickThreshold","onRight","onLeft","onUp","onDown","index","layout","buttonAxis","render","Children","only","children","Component","defaultProps","XBOX","onButtonDown","onButtonUp","onA","onB","onX","onY","onStart","onBack","onLT","onRT","onLB","onRB","onLS","onRS"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _layouts = require('./layouts');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Gamepad = function (_React$Component) {\n  _inherits(Gamepad, _React$Component);\n\n  function Gamepad(props, context) {\n    _classCallCheck(this, Gamepad);\n\n    var _this = _possibleConstructorReturn(this, (Gamepad.__proto__ || Object.getPrototypeOf(Gamepad)).call(this, props, context));\n\n    _this.padState = {\n      connected: false,\n\n      buttons: {\n        A: false,\n        B: false,\n        X: false,\n        Y: false,\n\n        LB: false,\n        LT: false,\n        LS: false,\n\n        RB: false,\n        RT: false,\n        RS: false,\n\n        Start: false,\n        Back: false,\n\n        DPadUp: false,\n        DPadRight: false,\n        DPadDown: false,\n        DPadLeft: false\n      },\n\n      axis: {\n        LeftStickX: 0.0,\n        LeftStickY: 0.0,\n\n        RightStickX: 0.0,\n        RightStickY: 0.0,\n\n        RightTrigger: 0.0,\n        LeftTrigger: 0.0\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Gamepad, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.mounted = true;\n\n      if (window && window.requestAnimationFrame) window.requestAnimationFrame(this.updateGamepad.bind(this));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: 'updateGamepad',\n    value: function updateGamepad() {\n      if (!this.mounted) return;\n\n      var gamepadIndex = this.props.gamepadIndex;\n      var gamepads = navigator.getGamepads();\n\n      if (gamepads.length && gamepads.length > gamepadIndex && gamepads[gamepadIndex]) {\n        var gamepad = gamepads[gamepadIndex];\n\n        if (!this.padState.connected) {\n          this.padState.connected = true;\n          this.props.onConnect(gamepadIndex);\n        }\n\n        this.updateAllButtons(gamepad);\n        this.updateAllAxis(gamepad);\n      } else if (this.padState.connected) {\n        this.padState.connected = false;\n        this.props.onDisconnect(gamepadIndex);\n      }\n\n      if (window && window.requestAnimationFrame) window.requestAnimationFrame(this.updateGamepad.bind(this));\n    }\n  }, {\n    key: 'updateAllButtons',\n    value: function updateAllButtons(gamepad) {\n      for (var i = 0; i < gamepad.buttons.length; ++i) {\n        var pressed = gamepad.buttons[i].pressed;\n        var value = gamepad.buttons[i].value;\n\n        var buttonName = this.buttonIndexToButtonName(i);\n        this.updateButton(buttonName, pressed);\n\n        var axisName = this.buttonIndexToAxisName(i);\n        this.updateAxis(axisName, value);\n      }\n    }\n  }, {\n    key: 'updateButton',\n    value: function updateButton(buttonName, pressed) {\n      if (this.padState.buttons[buttonName] === undefined) {\n        console.error('Unknown button ' + buttonName);\n      } else if (this.padState.buttons[buttonName] !== pressed) {\n        this.padState.buttons[buttonName] = pressed;\n\n        this.props.onButtonChange(buttonName, pressed);\n        this.props['onButton' + (pressed ? 'Down' : 'Up')](buttonName);\n        if (pressed) this.props['on' + buttonName.replace('DPad', '')]();\n      }\n    }\n  }, {\n    key: 'updateAllAxis',\n    value: function updateAllAxis(gamepad) {\n      for (var i = 0; i < gamepad.axes.length; ++i) {\n        var axisName = this.axisIndexToAxisName(i);\n        var value = gamepad.axes[i];\n\n        this.updateAxis(axisName, gamepad.axes[i]);\n      }\n    }\n  }, {\n    key: 'updateAxis',\n    value: function updateAxis(axisName, originalValue) {\n      if (axisName && originalValue !== undefined && originalValue !== null && originalValue !== NaN) {\n        var invert = axisName[0] === '-';\n        var value = originalValue * (invert ? -1 : 1);\n\n        if (Math.abs(value) < this.props.deadZone) {\n          value = 0;\n        }\n\n        if (invert) axisName = axisName.substr(1);\n\n        if (this.padState.axis[axisName] !== value) {\n          var previousValue = this.padState.axis[axisName];\n          this.padState.axis[axisName] = value;\n\n          this.props.onAxisChange(axisName, value, previousValue);\n\n          if (axisName === 'LeftStickX') {\n            if (previousValue <= this.props.stickThreshold && value > this.props.stickThreshold) {\n              this.props.onRight();\n            }\n\n            if (previousValue >= -this.props.stickThreshold && value < -this.props.stickThreshold) {\n              this.props.onLeft();\n            }\n          }\n\n          if (axisName === 'LeftStickY') {\n            if (previousValue <= this.props.stickThreshold && value > this.props.stickThreshold) {\n              this.props.onUp();\n            }\n\n            if (previousValue >= -this.props.stickThreshold && value < -this.props.stickThreshold) {\n              this.props.onDown();\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'buttonIndexToButtonName',\n    value: function buttonIndexToButtonName(index) {\n      var layout = this.props.layout;\n\n\n      if (layout.buttons && layout.buttons.length >= index + 1) {\n        return layout.buttons[index];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'buttonIndexToAxisName',\n    value: function buttonIndexToAxisName(index) {\n      var layout = this.props.layout;\n\n\n      if (layout.buttonAxis && layout.buttonAxis.length >= index + 1) {\n        return layout.buttonAxis[index];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'axisIndexToAxisName',\n    value: function axisIndexToAxisName(index) {\n      var layout = this.props.layout;\n\n\n      if (layout.axis && layout.axis.length >= index + 1) {\n        return layout.axis[index];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.Children.only(this.props.children);\n    }\n  }]);\n\n  return Gamepad;\n}(_react2.default.Component);\n\nGamepad.defaultProps = {\n  layout: _layouts.XBOX,\n\n  stickThreshold: 0.5,\n  deadZone: 0.08,\n\n  gamepadIndex: 0,\n\n  onConnect: function onConnect() {},\n  onDisconnect: function onDisconnect() {},\n\n  onButtonDown: function onButtonDown() {},\n  onButtonUp: function onButtonUp() {},\n  onButtonChange: function onButtonChange() {},\n  onAxisChange: function onAxisChange() {},\n\n  onA: function onA() {},\n  onB: function onB() {},\n  onX: function onX() {},\n  onY: function onY() {},\n\n  onStart: function onStart() {},\n  onBack: function onBack() {},\n\n  onLT: function onLT() {},\n  onRT: function onRT() {},\n\n  onLB: function onLB() {},\n  onRB: function onRB() {},\n\n  onLS: function onLS() {},\n  onRS: function onRS() {},\n\n  onUp: function onUp() {},\n  onDown: function onDown() {},\n  onLeft: function onLeft() {},\n  onRight: function onRight() {}\n};\nexports.default = Gamepad;"]},"metadata":{},"sourceType":"script"}